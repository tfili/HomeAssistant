- id: '1606676673191'
  alias: Thermostats (20 miles moving away)
  description: Set thermostats to Eco if more than 20 miles away and traveling away
    from home.
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    above: '20'
  - platform: state
    entity_id:
    - proximity.home
    attribute: dir_of_travel
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: proximity.home
      attribute: dir_of_travel
      state: towards
  - condition: numeric_state
    entity_id: proximity.home
    above: 20
  action:
  - device_id: 08a6dd4b35b484d1b40a2ecd10030df2
    domain: climate
    entity_id: climate.flex_room
    type: set_preset_mode
    preset_mode: eco
  - device_id: 015b691a363ef213cfde9c91ad3cab1e
    domain: climate
    entity_id: climate.bedroom
    type: set_preset_mode
    preset_mode: eco
  mode: single
- id: '1606676792936'
  alias: Thermostats (20 miles moving towards)
  description: Set thermostats to Eco if more than 20 miles away and traveling towards
    from home.
  trigger:
  - platform: numeric_state
    entity_id: proximity.home
    below: 20
  - platform: state
    entity_id:
    - proximity.home
    attribute: dir_of_travel
    to: towards
  condition:
  - condition: state
    entity_id: proximity.home
    state: towards
    attribute: dir_of_travel
  - condition: numeric_state
    entity_id: proximity.home
    below: 20
  action:
  - device_id: 015b691a363ef213cfde9c91ad3cab1e
    domain: climate
    entity_id: climate.bedroom
    type: set_preset_mode
    preset_mode: none
  - device_id: 08a6dd4b35b484d1b40a2ecd10030df2
    domain: climate
    entity_id: climate.flex_room
    type: set_preset_mode
    preset_mode: none
  mode: single
- id: '1607443386474'
  alias: Reset Motion Sensors
  description: ''
  trigger:
  - platform: state
    to: 'on'
    for:
      hours: 0
      minutes: 5
      seconds: 0
    entity_id:
    - binary_sensor.front_door_motion_sensor
    - binary_sensor.great_room_motion_sensor
    - binary_sensor.kitchen_motion_sensor
    - binary_sensor.basement_motion_sensor
  condition: []
  action:
  - service: python_script.hass_entities
    data:
      action: set_state
      entity_id: '{{ trigger.entity_id }}'
      state: 'off'
  mode: queued
  max: 10
- id: '1607638210964'
  alias: Reset Motion Sensors (Startup)
  description: ''
  trigger:
  - platform: homeassistant
    event: start
  condition: []
  action:
  - delay: 00:01:00
  - service: python_script.hass_entities
    data:
      action: set_state
      entity_id: binary_sensor.front_door_motion_sensor
      state: 'off'
  - service: python_script.hass_entities
    data:
      action: set_state
      entity_id: binary_sensor.great_room_motion_sensor
      state: 'off'
  - service: python_script.hass_entities
    data:
      action: set_state
      entity_id: binary_sensor.kitchen_motion_sensor
      state: 'off'
  - service: python_script.hass_entities
    data:
      action: set_state
      entity_id: binary_sensor.basement_motion_sensor
      state: 'off'
  mode: single
- id: '1607999948442'
  alias: Kitchen Motion Lights
  description: ''
  trigger:
  - platform: state
    from: 'off'
    to: 'on'
    entity_id: binary_sensor.basement_door_motion_sensor_occupancy
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: light.cabinet
      state: 'off'
    - condition: numeric_state
      entity_id: automation.kitchen_motion_lights
      attribute: current
      above: '0'
  action:
  - service: light.turn_on
    data: {}
    entity_id: light.cabinet
  - wait_for_trigger:
    - platform: state
      from: 'on'
      to: 'off'
      entity_id: binary_sensor.basement_door_motion_sensor_occupancy
  - delay: 00:02:00
  - service: light.turn_off
    data: {}
    entity_id: light.cabinet
  mode: restart
- id: '1608858136491'
  alias: Kitchen iBeacon Test
  description: ''
  trigger:
  - platform: state
    entity_id: device_tracker.mqtt_60cbab37_8f46_4482_9b89_27781ac02af6
    to: kitchen
  condition: []
  action:
  - service: notify.mobile_app_toms_iphone
    data:
      message: Entered kitchen
  mode: single
- alias: Set Default Theme
  description: ''
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      name: kibibit
    service: frontend.set_theme
  id: 5338138641074509ac3d115c3132d868
- id: '1617642446660'
  alias: Set Nest Motion Entities
  description: ''
  trigger:
  - platform: device
    device_id: 79442c3198ce3df321db20b7874d6285
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_abels_room
  - platform: device
    device_id: 9d8105f724dc536601acaa2daf3cef79
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_front_door
  - platform: device
    device_id: b8c655b88ad70bf5a8c4e92f4d7d5ffc
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_reeves_room
  - platform: device
    device_id: b2f4cef4c127ec8f30d445e39dd7add5
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_morning_room
  - platform: device
    device_id: 631237edbf1b66bf10461c63d27d037a
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_nursery
  - platform: device
    device_id: f608a75804749b060fc4274bb4bd9939
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_backyard
  - platform: device
    device_id: 8dff70f5a35e4c1cd87ce0154edbf8a6
    domain: nest
    type: camera_motion
    variables:
      motion_entity: input_boolean.motion_basement
  condition: []
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: '{{ motion_entity }}'
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - service: input_boolean.turn_off
    data:
      entity_id: '{{ motion_entity }}'
  mode: queued
  max: 10
- id: '1618875855459'
  alias: 'Tag scan: Toggle Mudroom Lock'
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
    context:
      user_id:
      - 7e537ada4de44808a33c00cbf425c4e0
      - 9c546e5ab33f47fcbd2103594668aaaf
    event_data:
      tag_id: a8c94b61-8c2e-4c4e-83ac-12320c6a94ab
  condition: []
  action:
  - service_template: "{% if is_state('lock.mud_room_lock', 'locked') %}\n  lock.unlock\n{%
      else %}\n  lock.lock\n{% endif %}\n"
    target:
      entity_id: lock.mud_room_lock
    data: {}
  mode: single
- id: '1618931661466'
  alias: 'Tag scan: Toggle Left Garage Door'
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
    context:
      user_id:
      - 7e537ada4de44808a33c00cbf425c4e0
      - 9c546e5ab33f47fcbd2103594668aaaf
    event_data:
      tag_id: a8e180a9-678e-4725-9257-625425614d2a
  condition: []
  action:
  - service: cover.toggle
    target:
      entity_id: cover.left_garage_door
    data: {}
  mode: single
- id: '1618932628621'
  alias: 'Tag scan: Toggle Right Garage Door'
  description: ''
  trigger:
  - platform: event
    event_type: tag_scanned
    context:
      user_id:
      - 7e537ada4de44808a33c00cbf425c4e0
      - 9c546e5ab33f47fcbd2103594668aaaf
    event_data:
      tag_id: 3c9eae60-e72c-45e2-b4bc-8c1a92fc9820
  condition: []
  action:
  - service: cover.toggle
    data: {}
    target:
      entity_id: cover.right_garage_door
  mode: single
- id: shellies_announce
  alias: Shellies Announce
  trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    hours: /1
  action:
    service: mqtt.publish
    data:
      topic: shellies/command
      payload: announce
- id: shellies_discovery
  alias: Shellies Discovery
  trigger:
  - platform: mqtt
    topic: shellies/announce
  action:
  - service: python_script.shellies_discovery
    data:
      id: '{{ trigger.payload_json.id }}'
      mac: '{{ trigger.payload_json.mac }}'
      fw_ver: '{{ trigger.payload_json.fw_ver }}'
      model: '{{ trigger.payload_json.model }}'
      mode: '{{ trigger.payload_json.mode | default }}'
      host: '{{ trigger.payload_json.ip }}'
      shellyswitch25-3C6105E4C230:
        relay-0: light
        relay-1: light
        force_update_sensors: true
      shelly1-E8DB84ACA160:
        relay-0: light
        force_update_sensors: true
      shelly1-3C6105E3A4C2:
        relay-0: light
        force_update_sensors: true
      shelly1-3C6105E3A7C9:
        relay-0: light
        force_update_sensors: true
  mode: queued
  max: 999
- id: shellies_announce_gen2
  alias: Shellies Announce Gen2
  trigger:
  - platform: homeassistant
    event: start
  - platform: time_pattern
    hours: /1
  action:
  - variables:
      device_info_payload: '{{ {''id'': 1, ''src'':''shellies_discovery'', ''method'':''Shelly.GetConfig''}
        | to_json }}'
      device_ids:
      - shellies/shellyplugus-083af2019ca8
  - repeat:
      for_each: '{{ device_ids }}'
      sequence:
      - service: mqtt.publish
        data:
          topic: '{{ repeat.item }}/rpc'
          payload: '{{ device_info_payload }}'
- id: shellies_discovery_gen2
  alias: Shellies Discovery Gen2
  mode: queued
  max: 999
  trigger:
  - platform: mqtt
    topic: shellies_discovery/rpc
  action:
  - service: python_script.shellies_discovery_gen2
    data:
      id: '{{ trigger.payload_json.src }}'
      device_config: '{{ trigger.payload_json.result }}'
- id: '1644036755398'
  alias: 'Wake-on-LAN: Basement Projector'
  description: ''
  trigger:
  - platform: webostv.turn_on
    entity_id: media_player.basement_projector
  action:
  - service: wake_on_lan.send_magic_packet
    data:
      mac: B0:37:95:01:2B:92
      broadcast_address: 192.168.0.255
- id: '1645034312500'
  alias: Dryer Complete
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.dryer_dry_completed
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: notify.alexa_media
    data:
      message: The dryer is done. You better get folding.
      target:
      - media_player.kitchen_alexa
      data:
        type: tts
  mode: single
- id: '1646407771689'
  alias: New version availabile
  description: ''
  trigger:
  - platform: state
    entity_id: update.home_assistant_core_update
    from: 'off'
    to: 'on'
  - platform: homeassistant
    event: start
  - platform: time
    at: '12:00:00'
  condition: []
  action:
  - delay:
      hours: 0
      minutes: 1
      seconds: 0
      milliseconds: 0
  - condition: state
    entity_id: update.home_assistant_core_update
    state: 'on'
  - service: notify.mobile_app_toms_iphone
    data:
      title: HA v{{ states('sensor.home_assistant_website') }} is now available
      message: Currently running v{{ states('sensor.current_version') }}
      data:
        actions:
        - action: RELEASE_NOTES
          title: Open Release Notes
          uri: '{{ state_attr(''sensor.home_assistant_website'', ''release_notes'')
            }}'
        - action: UPDATE
          title: Update Version
          uri: /config/dashboard
  mode: single
- id: '1688434775547'
  alias: Low Battery Notification
  description: ''
  trigger:
  - platform: time
    at: 09:00:00
  condition: []
  action:
  - variables:
      threshold: 10
      sensors: "{% set result = namespace(sensors=[]) %} {% for state in states.sensor
        | selectattr('attributes.device_class', '==', 'battery') %}\n  {% if 0 <=
        state.state | int(-1) < threshold %}\n    {% set name = state.name | replace('
        battery', '') %}\n    {% set result.sensors = result.sensors + [name ~ ' ('
        ~ state.state ~ ' %)'] %}\n  {% endif %}\n{% endfor %} {% for state in states.binary_sensor
        | selectattr('attributes.battery_low', '==', true) %}\n  {% set result.sensors
        = result.sensors + [state.name] %}\n{% endfor %} {{result.sensors | sort |
        join(', ')}}"
  - condition: template
    value_template: '{{ sensors != '''' }}'
  - service: notify.mobile_app_toms_iphone
    data:
      title: Low Battery
      message: '{{sensors}}

        '
      data:
        url: /lovelace/battery-alert
  mode: single
- id: '1688667415109'
  alias: Control Blinds with Button
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.basement_blind_button_action
  condition: []
  action:
  - if:
    - condition: template
      value_template: '{{ trigger.to_state.state == ''open'' }}

        '
    then:
    - service: cover.open_cover
      data: {}
      target:
        device_id: e83194d36344b6a7628d6173595e0447
    else:
    - if:
      - condition: template
        value_template: '{{ trigger.to_state.state == ''close'' }}'
      then:
      - service: cover.close_cover
        data: {}
        target:
          device_id: e83194d36344b6a7628d6173595e0447
  mode: single
- id: '1688856626822'
  alias: Vacuum/mop status update
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.basement_roomba
    - vacuum.greatroom_roomba
    for:
      hours: 0
      minutes: 0
      seconds: 5
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state and (trigger.to_state.state
      == ''error'' or trigger.to_state.state == ''docked'') }}'
  action:
  - variables:
      name: '{{ trigger.to_state.name }}'
      status: '{{ trigger.to_state.attributes.status }}'
      errorEntity: '{{ trigger.entity_id | replace(''vacuum.'', ''input_boolean.'')
        }}_error'
      message: "{% if trigger.to_state.state == 'docked' %}\n  {% if is_state(errorEntity,
        'on') %}\n    {{ name }} has been returned to the dock ({{ status }})\n  {%
        else %}\n    {{ name }} has finished successfully ({{ status }})\n  {% endif
        %}\n{% else %}\n  {% if status == 'Stuck' %}\n    {{ name }} is stuck\n  {%
        else %}\n    {{ name }} couldn't complete the job ({{ status }})\n  {% endif
        %}\n{% endif %}\n"
  - service: notify.mobile_app_toms_iphone
    data:
      title: '{{ name }}'
      message: '{{ message }}'
  - if:
    - condition: template
      value_template: '{{ trigger.to_state.state == ''docked'' }}'
    then:
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: '{{ errorEntity }}'
    else:
    - service: input_boolean.turn_on
      data: {}
      target:
        entity_id: '{{ errorEntity }}'
  mode: single
- id: '1688913235675'
  alias: Vacuum bin full notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - vacuum.basement_roomba
    - vacuum.greatroom_roomba
    attribute: status
    from: 'false'
    to: 'true'
  condition: []
  action:
  - service: notify.mobile_app_toms_iphone
    data:
      message: '{{ trigger.from_state.name }}''s bin is full'
  mode: single
- id: '1689002155415'
  alias: Kitchen Light Remote
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Remote/action
  condition:
  - condition: template
    value_template: '{{ ''_press_release'' not in trigger.payload }}'
  action:
  - variables:
      payload: '{{ trigger.payload }}'
      serviceName: "{% if payload == 'off_press' or payload == 'off_hold_release'
        %}\n  light.turn_off\n{% else %}\n  light.turn_on\n{% endif %}\n"
      serviceData: "{% if payload == 'up_press' or payload == 'up_hold' %}\n  { \"brightness_step_pct\":
        10 }\n{% elif payload == 'down_press' or payload == 'down_hold' %}\n  { \"brightness_step_pct\":
        -10 }\n{% else %}\n  {}\n{% endif %}\n"
  - service: '{{ serviceName }}'
    data: '{{ serviceData }}'
    target:
      entity_id: light.cabinet
  mode: queued
  max: 10
- id: '1689010045910'
  alias: Mail Delivered event handler
  description: ''
  trigger:
  - platform: event
    event_type:
    - mobile_app_notification_action
    - ios.action_fired
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.action == ''MAIL_RETRIEVED'' or trigger.event.data.actionName
      == ''MAIL_RETRIEVED'' }}'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.mail_delivered
  mode: single
- id: '1689010572552'
  alias: Dismiss Alert event handler
  description: ''
  trigger:
  - platform: event
    event_type:
    - mobile_app_notification_action
    - ios.action_fired
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.action == ''DISMISS_ALERT'' or trigger.event.data.actionName
      == ''DISMISS_ALERT'' }}'
  action:
  - service: alert.turn_off
    data: {}
    target:
      entity_id: '{{ trigger.event.action_data.entity_id }}'
  mode: single
- id: '1689010815681'
  alias: Turn on porch & driveway lights
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: 0
  condition: []
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id:
      - light.porch_lights
      - light.driveway_lights
  - wait_for_trigger:
    - platform: sun
      event: sunrise
      offset: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.porch_lights
      - light.driveway_lights
  mode: single
- id: '1689021667956'
  alias: Door sensor notifications
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.abel_s_door_contact
    - binary_sensor.reeves_door_contact
    - binary_sensor.basement_egress_window
    from: 'off'
    to: 'on'
  condition: []
  action:
  - variables:
      name: '{{ trigger.from_state.name | replace('' contact'', '''') }}'
      cameraEntity: "{% if trigger.entity_id == 'binary_sensor.abel_s_door_contact'
        %}\n    camera.abels_room\n{% elif trigger.entity_id == 'binary_sensor.reeves_door_contact'
        %}\n  camera.reeves_room\n{% else %}\n  camera.basement\n{% endif %}\n"
  - service: notify.everyone
    data:
      message: '{{ name }} was opened'
      data:
        entity_id: '{{ cameraEntity }}'
  - service: notify.alexa_media
    data:
      message: '{{ name }} was opened'
      target:
      - media_player.kitchen_alexa
      - media_player.basement_alexa
  mode: single
- id: '1689023119740'
  alias: Mail delivered
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.mailbox_contact
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.mail_delivered
  mode: single
- id: '1689023382014'
  alias: Auto Home
  description: ''
  trigger:
  - platform: zone
    entity_id: person.tom_fili
    zone: zone.auto_home
    event: enter
  - platform: zone
    entity_id: person.jami_fili
    zone: zone.auto_home
    event: enter
  condition:
  - condition: not
    conditions:
    - condition: state
      entity_id: alarm_control_panel.wrapped_alarm
      state: disarmed
  action:
  - service: alarm_control_panel.alarm_disarm
    data: {}
    target:
      entity_id: alarm_control_panel.wrapped_alarm
  mode: single
- id: '1689027625322'
  alias: 'Event Handler: Arm Alarm'
  description: ''
  trigger:
  - platform: event
    event_type:
    - mobile_app_notification_action
    - ios.action_fired
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.action == ''ALARM_ARM'' or trigger.event.data.actionName
      == ''ALARM_ARM'' }}'
  action:
  - service: alarm_control_panel.alarm_arm_away
    data: {}
    target:
      entity_id: alarm_control_panel.wrapped_alarm
  mode: single
- id: '1689097272905'
  alias: 'Event Handler: Close Garage Doors'
  description: ''
  trigger:
  - platform: event
    event_type:
    - mobile_app_notification_action
    - ios.action_fired
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.action == ''GARAGE_CLOSE'' or trigger.event.data.actionName
      == ''GARAGE_CLOSE'' }}'
  action:
  - service: script.close_garage_doors
    data: {}
  mode: single
- id: '1689179755919'
  alias: Shutdown HA when running out of battery
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.apc_battery_charge
    below: 10
  condition:
  - condition: template
    value_template: '{{ ''DISCHRG'' in sensor.apc_status_data }}'
  action:
  - service: hassio.host_shutdown
    data: {}
  mode: single
- id: '1689186557347'
  alias: Alarm disarmed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.wrapped_alarm
    to: disarmed
  condition:
  - condition: template
    value_template: '{{ trigger.from_state is not none and trigger.from_state.state
      != ''unavailable'' }}'
  action:
  - service: lock.unlock
    data: {}
    target:
      entity_id: lock.mud_room_lock
  - if:
    - condition: state
      entity_id: sun.sun
      state: below_horizon
    then:
    - service: light.turn_on
      data:
        brightness_pct: 50
      target:
        entity_id:
        - light.cabinet
        - light.kitchen_dimmer
  - service: notify.everyone
    data:
      title: Alarm State Changed
      message: Disarmed
  mode: single
- id: '1689187420027'
  alias: 'Wake-on-LAN: Greatroom TV'
  description: ''
  trigger:
  - platform: samsungtv.turn_on
    entity_id: media_player.samsung_smart_tv
  condition: []
  action:
  - service: wake_on_lan.send_magic_packet
    data:
      broadcast_port: 9
      mac: 10:2B:41:89:E8:54
      broadcast_address: 192.168.0.255
  mode: single
- id: '1689189186005'
  alias: Alarm armed
  description: ''
  trigger:
  - platform: state
    entity_id:
    - alarm_control_panel.wrapped_alarm
    to: armed_away
  - platform: state
    entity_id:
    - alarm_control_panel.wrapped_alarm
    to: armed_home
  - platform: event
    event_type: alarm_tasks_no_arm
  condition:
  - condition: template
    value_template: '{{ trigger.platform == ''event'' or (trigger.platform == ''state''
      and trigger.from_state is not none and trigger.from_state.state != ''unavailable'')
      }}'
  action:
  - variables:
      title: "{% if trigger.platform == 'event' %}\n  Alarm Actions\n{% else %}\n
        \ Alarm State Changed\n{% endif %}\n"
      message: "{% if trigger.platform == 'event' %}\n  What do you want to clean?\n{%
        else %}\n  {{ trigger.to_state.state | replace('armed_', '') }}\n{% endif
        %}\n"
  - parallel:
    - service: lock.lock
      data: {}
      target:
        entity_id: lock.mud_room_lock
    - service: script.close_garage_doors
      data: {}
    - service: notify.mobile_app_toms_iphone
      data:
        title: '{{ title }}'
        message: '{{ message }}'
        data:
          actions:
          - identifier: VACUUM
            title: Vacuum
            authenticationRequired: true
          - identifier: VACUUM_AND_MOP
            title: Vacuum and Mop
            authenticationRequired: true
          - identifier: NOTHING
            title: Nothing
            authenticationRequired: false
    - if:
      - condition: template
        value_template: '{{ trigger.platform == ''event'' or (trigger.platform ==
          ''state'' and trigger.to_state.state != ''armed_away'') }}'
      then:
      - parallel:
        - service: light.turn_off
          data: {}
          target:
            entity_id:
            - light.basement_lights
            - light.kitchen_dimmer
            - light.cabinet
        - service: remote.send_command
          data:
            num_repeats: 1
            delay_secs: 0.4
            hold_secs: 0
            command: KEY_HOME
          target:
            entity_id: remote.greatroom_tv
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - service: media_player.turn_off
        data: {}
        target:
          entity_id:
          - media_player.bar_tv
          - media_player.basement_projector
          - media_player.greateoom_tv
          - media_player.gym_tv
          - media_player.office_tv
  mode: single
- id: '1689552243582'
  alias: 'Event Handler: Vacuum/Mop'
  description: ''
  trigger:
  - platform: event
    event_type:
    - mobile_app_notification_action
  condition:
  - condition: template
    value_template: '{{ trigger.event.data.action == ''VACUUM_AND_MOP'' or trigger.event.data.action
      == ''VACUUM'' }}'
  action:
  - service: light.turn_on
    data:
      brightness_pct: 50
    target:
      entity_id:
      - light.cabinet
      - light.kitchen_dimmer
  - service: script.start_vacuum_or_mop
    data:
      entity_id: vacuum.greatroom_roomba
    response_variable: vacuum_success
  - if:
    - condition: template
      value_template: '{{ vacuum_success and  trigger.event.data.action == ''VACUUM_AND_MOP''
        }}'
    then:
    - service: script.start_vacuum_or_mop
      data: {}
      enabled: false
      response_variable: final_success
    - variables:
        final_success: '{{ vacuum_success }}'
        comment: This is temporary until the mop is working. Enable the above and
          delete this.
    else:
    - variables:
        final_success: '{{ vacuum_success }}'
  - delay:
      hours: 0
      minutes: 10
      seconds: 0
      milliseconds: 0
  - service: light.turn_off
    data: {}
    target:
      entity_id:
      - light.cabinet
      - light.kitchen_dimmer
  mode: single
